[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CE 307 - Projeto de Extensão",
    "section": "",
    "text": "Apresentação\nEstatística e Ciência de Dados - UFPR",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#estrutura-de-aula-curso-de-r-para-alunos-de-ensino-médio-14-16-anos",
    "href": "index.html#estrutura-de-aula-curso-de-r-para-alunos-de-ensino-médio-14-16-anos",
    "title": "CE 307 - Projeto de Extensão",
    "section": "Estrutura de Aula: Curso de R para Alunos de Ensino Médio (14-16 anos)",
    "text": "Estrutura de Aula: Curso de R para Alunos de Ensino Médio (14-16 anos)",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#objetivos",
    "href": "index.html#objetivos",
    "title": "CE 307 - Projeto de Extensão",
    "section": "Objetivos",
    "text": "Objetivos\nIntroduzir os alunos ao uso da linguagem de programação R para análise de dados, com foco em desenvolver habilidades básicas em programação, análise de dados e visualização, aplicando conceitos matemáticos e estatísticos de maneira prática e acessível.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#ementa",
    "href": "index.html#ementa",
    "title": "CE 307 - Projeto de Extensão",
    "section": "Ementa",
    "text": "Ementa\nRelações entre universidade e sociedade; Fundamentos e metodologias de extensão; Concepções e tendências da extensão universitária; Avaliação e planejamento na extensão. Aplicação de técnicas de visualização de dados e análises estatísticas básicas, sob orientação de um professor da área.\nLocal: . Horário: sexta-feira, 6 de dezembro 2024, 15:30 - 17:30h.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "index.html#referências-bibliográficas",
    "href": "index.html#referências-bibliográficas",
    "title": "CE 307 - Projeto de Extensão",
    "section": "Referências bibliográficas",
    "text": "Referências bibliográficas\n\nARA, A. Elementos Visuais. 2023. 50 slides\nGYSI, D. M. CE302 - Elementos de Programação para Estatística. Disponível em: https://gysi.quarto.pub/ce302/. Acesso em: 19 out. 2024.\nNOVAES NETTO, A. R.; BESSEGATO, L. F. Educação Estatística no Ensino Médio: A Leitura de Gráficos. Revista de Investigação e Divulgação em Educação Matemática, v. 6, n. 1, 10 dez. 2022. Disponível em: https://periodicos.ufjf.br/index.php/ridema/article/view/39355/25281. Acesso em: 19 out. 2024.\nSHIMAKURA, S. Disponível em: http://leg.ufpr.br/~silvia/CE055/node6.html. Acesso em: 19 out. 2024.",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "00_presentation.html",
    "href": "00_presentation.html",
    "title": "Visualização de Dados",
    "section": "",
    "text": "Neste módulo, iremos introduzi-los à criação de gráficos simples no R, por meio de 4 etapas:\n\nIntrodução ao pacote ggplot para visualização de dados;\nCriação de gráficos de barras, histogramas, gráficos de setores e de dispersão;\nPersonalização básica de gráficos: títulos, eixos, cores;\nResolução de exercício e Quizz.",
    "crumbs": [
      "Visualização de Dados"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html",
    "href": "01_visualizacao-dados.html",
    "title": "1  Motivação",
    "section": "",
    "text": "1.1 Gráficos Animados utilizando o gganimate\nFigure 1.1: Gráfico animado do pacote datasauRus",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#gráfico-3d-utilizando-o-plotly",
    "href": "01_visualizacao-dados.html#gráfico-3d-utilizando-o-plotly",
    "title": "1  Motivação",
    "section": "\n1.2 Gráfico 3D utilizando o plotly\n",
    "text": "1.2 Gráfico 3D utilizando o plotly\n\n\n\n\n\n\n\n\nFigure 1.2: Gráfico básico 3D da superfície de um vulcão",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#mapa-utilizando-o-leaflet",
    "href": "01_visualizacao-dados.html#mapa-utilizando-o-leaflet",
    "title": "1  Motivação",
    "section": "\n1.3 Mapa utilizando o leaflet\n",
    "text": "1.3 Mapa utilizando o leaflet\n\n\n\n\n\n\n\n\nFigure 1.3: Densidade populacional de Curitiba\n\n\n\n\n\n\n\n\n\n\nFigure 1.4: Localização do prédio de Estatística e Ciências de Dados na UFPR",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#gráfico-de-linha-utilizando-o-ggplot",
    "href": "01_visualizacao-dados.html#gráfico-de-linha-utilizando-o-ggplot",
    "title": "1  Motivação",
    "section": "\n1.4 Gráfico de linha utilizando o ggplot\n",
    "text": "1.4 Gráfico de linha utilizando o ggplot\n\n\n\n\n\n\n\n\nFigure 1.5: Comparação entre altura dos personagens femininos e masculinos de Star Wars",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#gráfico-de-dispersão-utilizando-o-ggplot",
    "href": "01_visualizacao-dados.html#gráfico-de-dispersão-utilizando-o-ggplot",
    "title": "1  Motivação",
    "section": "\n1.5 Gráfico de dispersão utilizando o ggplot\n",
    "text": "1.5 Gráfico de dispersão utilizando o ggplot\n\n\n\n\n\n\n\n\nFigure 1.6: Relação entre Valor e Idade Média dos times mandantes do Campeonato Brasileiro (2010-2024)",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#elementos-visuais",
    "href": "01_visualizacao-dados.html#elementos-visuais",
    "title": "1  Motivação",
    "section": "\n1.6 Elementos Visuais",
    "text": "1.6 Elementos Visuais\nOs gráficos e as visualizações são usados para organizar e resumir informações contidas em dados, permitindo uma percepção visual de forma mais rápida e dinâmica e induzindo o espectador a pensar sobre o assunto tratado. Nesse contexto, Edward Tufte, professor emérito de Estatística da Universidade de Yale, definiu alguns princípios sobre como obter gráficos de excelência:\n\nAcima de tudo, mostre os dados.\nMaximize a taxa de dados e tinta.\nApague a tinta que não é de dados.\nApague a tinta de dados redundantes.\nRevise e edite.\n\nPor outro lado, tão importante quanto saber fazer gráficos, é saber analisá-los com um senso crítico, questionando a origem dos dados usados, verificando se há parcialidade, averiguando se os resultados apresentados são consistentes e analisando se as informações foram apresentadas da maneira mais eficiente possível. Nesse sentido, fica de sugestão ao leitor o livro “Como mentir com estatística”, de Darrell Huff, que mostra as diversas maneiras que a estatística pode ser usada para enganar as pessoas, sendo uma delas a distorção de gráficos. Para ilustrar isso, logo abaixo temos exemplos de gráficos não efetivos:\n\n1.6.1 Gráfico de setores com muitas informações\n\n\nFonte:https://www.hashtagtreinamentos.com/erros-no-grafico-de-pizza-no-power-bi\n\n\n1.6.2 Gráfico de barras com eixo Y distorcido\n\n\nFonte: https://gizmodo.uol.com.br/mentir-visualizacao-dados/\n\n\n1.6.3 Gráfico de linha com eixo Y invertido e cor desnecessária\n\n\nFonte: https://gizmodo.uol.com.br/mentir-visualizacao-dados/\n\n\n1.6.4 Gráfico de setores totalizando mais de 100%\n\n\nFonte:https://gizmodo.uol.com.br/mentir-visualizacao-dados/",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#tipos-de-variáveis",
    "href": "01_visualizacao-dados.html#tipos-de-variáveis",
    "title": "1  Motivação",
    "section": "\n1.7 Tipos de variáveis",
    "text": "1.7 Tipos de variáveis\nPara sabermos qual tipo de gráfico é ideal para um determinado conjunto de dados, primeiramente é necessário conhecermos os tipos das variáveis estudadas.\nUma variável é uma característica de interesse que geralmente varia entre elementos de uma população, podendo ser classificada da seguinte forma:\n\nVariáveis Qualitativas (ou Categóricas): são características definidas por várias categorias. Podem ser nominais ou ordinais.\n\nNominais: características que não possuem ordenação entre suas categorias. Exemplos: sexo, raça.\nOrdinais: características que possuem ordenação entre suas categorias. Exemplos: escolaridade, estágio de uma doença.\n\n\nVariáveis Quantitativas: são características que apresentam valores numéricos e podem ser medidas em uma escala quantitativa. Podem ser discretas ou contínuas.\n\nDiscretas: características que assumem apenas um número finito ou enumerável de valores, isto é, assumem valores inteiros. Geralmente são o resultado de contagens. Exemplo: número de filhos.\nContínuas: características que assumem valores no conjuntos dos reais, em uma escala contínua. Exemplo: peso.\n\n\n\nAlguns pontos importantes a serem observados são:\n\nUma variável originalmente quantitativa pode ser coletada de forma qualitativa. Exemplo: idade é uma variável quantitativa contínua, mas se for informada apenas a faixa etária (0 a 10 anos, 11 a 20 anos, etc.) é qualitativa ordinal.\nUma variável representada por números nem sempre é numérica. Exemplo: número da identidade.",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#tipos-de-gráficos",
    "href": "01_visualizacao-dados.html#tipos-de-gráficos",
    "title": "1  Motivação",
    "section": "\n1.8 Tipos de gráficos",
    "text": "1.8 Tipos de gráficos\nConhecendo agora os tipos de variáveis, é possível compreender quais gráficos representam melhor um determinado conjunto de dados! Para mostrar isso, vamos usar a base de dados starwars do pacote dplyr do R.\n\n1.8.1 Gráfico de setores\nCompara categorias de variáveis qualitativas.\n\n\n\n\n\n\n\nFigure 1.7: Proporção de personagens femininos e masculinos de Star Wars\n\n\n\n\n\n1.8.2 Gráfico de barras\nCompara categorias de variáveis qualitativas, podendo ser usado também para variáveis quantitativas discretas que assumem poucos valores.\n\n\n\n\n\n\n\nFigure 1.8: Número de personagens femininos e masculinos em Star Wars\n\n\n\n\n\n1.8.3 Histograma\nMostra a distribuição de uma variável quantitativa.\n\n\n\n\n\n\n\nFigure 1.9: Altura dos personagens de Star Wars\n\n\n\n\n\n1.8.4 Gráfico de densidade\nMostra a distribuição de uma variável quantitativa.\n\n\n\n\n\n\n\nFigure 1.10: Comparação entre altura dos personagens femininos e masculinos de Star Wars\n\n\n\n\n\n1.8.5 Gráfico de dispersão\nMostra a relação entre duas variáveis quantitativas.\n\n\n\n\n\n\n\nFigure 1.11: Relação entre peso e altura dos personagens de Star Wars",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "02_intro-ggplot.html",
    "href": "02_intro-ggplot.html",
    "title": "2  O pacote ggplot2",
    "section": "",
    "text": "2.1 Galerias\nExistem inúmeras possibilidades de construção de gráficos com o ggplot2 para a visualização de dados utilizando o R. Ele permitem criar praticamente qualquer tipo de gráfico.\nAlgumas demonstrações exemplos podem ser verificados em https://www.r-graph-gallery.com/portfolio/ggplot2-package/\nFigure 2.1: Tipos de gráficos do pacote ggplot2",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>O pacote `ggplot2`</span>"
    ]
  },
  {
    "objectID": "02_intro-ggplot.html#gramática-dos-gráficos",
    "href": "02_intro-ggplot.html#gramática-dos-gráficos",
    "title": "2  O pacote ggplot2",
    "section": "\n2.2 Gramática dos gráficos",
    "text": "2.2 Gramática dos gráficos\n\n\n\n\n\n\n\nFigure 2.2: Camadas dos gráficos no ggplot\n\n\n\n\nO ggplot fornece uma estrutura unificadora (uma gramática) para descrever e especificar gráficos. Cria gráficos de dados de forma incremental a partir de pequenos pedaços de código.\n\nData = Dados\nAesthetics = Estética ⇒ Cores, titulo, legendas, etc\nGeometries = Geometria ⇒ Tipo de Gráfico\n\ngeom_bar()\ngeom_col()\ngeom_map()\ngeom_point()\n\n\nFacets = Facetas ⇒ Gráficos em grade para comparação\n\nfacet_grid()\nfacet_wrap()\n\n\nStatistics = Estatísticas ⇒ Estáticas como média, contagem, entre outros.\n\nstat_count()\nstat_sum()\nstat_density()\n\n\nCoordinates = Coordenadas ⇒ Como serão mostradas as coordenadas x e y\n\ncoord_flip()\ncoord_fixed()\ncoord_cartesian()\n\n\nThemes = Temas ⇒ Mais outra forma de personalização\n\ntheme_grey()\ntheme_gray()\ntheme_bw()\ntheme_linedraw()\ntheme_light()",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>O pacote `ggplot2`</span>"
    ]
  },
  {
    "objectID": "02_intro-ggplot.html#instalação-do-pacote-ggplot2",
    "href": "02_intro-ggplot.html#instalação-do-pacote-ggplot2",
    "title": "2  O pacote ggplot2",
    "section": "\n2.3 Instalação do pacote ggplot2\n",
    "text": "2.3 Instalação do pacote ggplot2\n\nPara começar a construir os primeiros gráficos utilizando o pacote ggplot2, é necessário, primeiramente, instalar e carregar o pacote antes de rodar os gráficos\n\ninstall.packages(\"ggplot2\")\nlibrary(ggplot2)",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>O pacote `ggplot2`</span>"
    ]
  },
  {
    "objectID": "03_graphics.html",
    "href": "03_graphics.html",
    "title": "3  Criação de gráficos com o ggplot2",
    "section": "",
    "text": "3.1 Carregando o Dataset\nRurl &lt;- \"https://raw.githubusercontent.com/raymz1990/CE307-Projeto-Extensao/refs/heads/main/data/serie_a_2010_2024.csv\"\ndados &lt;- read.csv(file = url,\n                  header = TRUE,     \n                  sep = \",\",    \n                  stringsAsFactors = FALSE)",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Criação de gráficos com o `ggplot2`</span>"
    ]
  },
  {
    "objectID": "03_graphics.html#gráfico-de-dispersão",
    "href": "03_graphics.html#gráfico-de-dispersão",
    "title": "3  Criação de gráficos com o ggplot2",
    "section": "\n3.2 Gráfico de Dispersão",
    "text": "3.2 Gráfico de Dispersão\nO Gráfico de Dispersão exibe a relação entre duas variáveis numéricas em um conjunto de dados. Cada ponto no gráfico representa uma observação, onde a posição no eixo X indica o valor de uma variável, e a posição no eixo Y indica o valor da outra variável. A disposição dos pontos pode revelar padrões, correlações ou até a ausência de uma relação clara entre as variáveis.\n\n3.2.1 Utilidade\n\n\nIdentificação de relações entre variáveis: O gráfico de dispersão é útil para observar se duas variáveis estão correlacionadas (positivamente ou negativamente) ou se não há relação aparente entre elas.\n\nDetecção de padrões e outliers: Ele também permite identificar padrões em conjuntos de dados, como tendências de aumento ou diminuição, além de destacar valores atípicos (outliers).\n\n3.2.2 Exemplo de Aplicação\nAo gerar um gráfico de dispersão para comparar o valor do time mandante de um jogo com a idade média time mandante, você pode verificar se há uma tendência de que jogos com maior valor do time mandante são afetados pela idade média do time, ou se essa relação é inexistente. Além disso, valores muito distantes dos outros pontos podem ser identificados como possíveis outliers, como jogos com valor do time mandante excepcionalmente alto ou baixo.\n\n3.2.3 Criando o gráfico\nO primeiro passo é carregar o conjunto de dados que vai ser usado no gráfico, seguido da informação ao ggplot() dos dados devem ser visualmente representadas. O argumento mapping da função ggplot() define como as variáveis do seu conjunto de dados são mapeadas para as propriedades visuais (estéticas) do gráfico. O mapeamento é sempre definido dentro da função aes(), e os argumentos x e y de aes() especificam quais variáveis serão mapeadas para os eixos X e Y. No seu caso, vamos mapear valor do time mandante para o eixo X e idade média time mandante para o eixo Y.\nAqui está o resultado de adicionar esses mapeamentos:\n\nRlibrary(ggplot2)\n\nggplot(\n  data = dados,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante)\n)\n\n\n\n\n\n\n\nO gráfico, embora vazio, apresenta uma estrutura — fica claro onde o valor do time mandante será exibido (no eixo X) e onde a idade média time mandante será exibida (no eixo Y). No entanto, os dados ainda não aparecem no gráfico, pois ainda não definimos como as observações serão representadas visualmente.\nPara isso, precisamos definir um geom: o objeto geométrico que um gráfico usa para representar os dados. Esses objetos geométricos são disponibilizados no ggplot2 por meio de funções que começam com geom_. Por exemplo, gráficos de barras usam barras geométricas (geom_bar()), gráficos de linhas usam linhas geométricas (geom_line()), boxplots usam geoms de boxplot (geom_boxplot()), e gráficos de dispersão usam pontos geométricos (geom_point()).\nA função geom_point() adiciona uma camada de pontos ao gráfico, criando um gráfico de dispersão. O ggplot2 possui várias funções geom_, cada uma adicionando um tipo diferente de camada ao gráfico.\nAqui está o código completo para criar o gráfico de dispersão de valor do time mandante versus idade média do mandante:\n\nRggplot(\n  data = dados,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante)\n) +\n  geom_point()\n\n\n\n\n\n\n\n\n3.2.3.1 Adicionando mais camadas e estética\nGráficos de dispersão são úteis para mostrar a relação entre duas variáveis numéricas, mas também é interessante adicionar mais informações visuais para enriquecer o gráfico. Por exemplo, podemos incluir a cor dos pontos para indicar qual time mandante jogou. Podemos fazer isso modificando o mapeamento estético dentro da função aes().\n\nRggplot(\n  data = dados,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante, color = time_mandante)\n) +\n  geom_point()\n\n\n\n\n\n\n\nAgora, cada ponto está colorido de acordo com o time mandante. Isso nos ajuda a visualizar se diferentes times apresentam diferentes padrões na relação entre o valor do time mandante e sua idade média.\n\n3.2.3.2 Adicionando uma linha de tendência\nPodemos adicionar uma linha de tendência para observar a relação entre o valor do time mandante e a idade média ao longo dos jogos. Para isso, usamos a função geom_smooth(), que adiciona uma curva de ajuste aos dados. Especificando method = \"lm\", pedimos uma linha de regressão linear.\n\nRggplot(\n  data = dados,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante, color = time_mandante)\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\nUma linha de tendência linear indica uma possível relação direta entre o valor da equipe e a idade média. Ou seja, pode-se interpretar se equipes mais caras tendem a ter jogadores mais experientes ou não.\n\n3.2.3.3 Redução de Dados para Melhoria da Visualização\nQuando trabalhamos com grandes conjuntos de dados, como informações detalhadas de várias equipes de futebol, pode ser difícil interpretar as relações entre variáveis devido à quantidade de informação. Para facilitar a análise e melhorar a visualização, é comum filtrar e reduzir os dados, focando em subsetores ou grupos de interesse.\nEssa redução de dados ajuda a destacar padrões específicos e a melhorar a interpretação das informações visuais, tornando mais fácil identificar tendências e correlações significativas entre as variáveis escolhidas.\nDesta forma, os dados serão reduzidos para uma amostra menor, filtrando 3 times específicos e removendo os valores NA, para que este valores não afetem na análise.\n\nRlibrary(tidyverse)\n\ndados_dispersao &lt;- dados %&gt;%\n  filter(time_mandante %in% c(\"Coritiba FC\", \"Athletico-PR\", \"Paraná\")) %&gt;%\n  drop_na(valor_equipe_titular_mandante, idade_media_titular_mandante)\n\nsummary(dados_dispersao)\n\n ano_campeonato     data               rodada        estadio         \n Min.   :2011   Length:298         Min.   : 1.00   Length:298        \n 1st Qu.:2015   Class :character   1st Qu.:10.00   Class :character  \n Median :2019   Mode  :character   Median :19.00   Mode  :character  \n Mean   :2018                      Mean   :19.33                     \n 3rd Qu.:2022                      3rd Qu.:29.00                     \n Max.   :2024                      Max.   :38.00                     \n                                                                     \n    publico      time_mandante      time_visitante     tecnico_mandante  \n Min.   :    0   Length:298         Length:298         Length:298        \n 1st Qu.: 7629   Class :character   Class :character   Class :character  \n Median :13666   Mode  :character   Mode  :character   Mode  :character  \n Mean   :13578                                                           \n 3rd Qu.:19726                                                           \n Max.   :38059                                                           \n                                                                         \n tecnico_visitante  colocacao_mandante colocacao_visitante\n Length:298         Min.   : 1.00      Min.   : 1.00      \n Class :character   1st Qu.: 8.00      1st Qu.: 5.00      \n Mode  :character   Median :13.00      Median :10.00      \n                    Mean   :12.57      Mean   :10.38      \n                    3rd Qu.:18.00      3rd Qu.:16.00      \n                    Max.   :20.00      Max.   :20.00      \n                                                          \n valor_equipe_titular_mandante valor_equipe_titular_visitante\n Min.   :    1085              Min.   :     853              \n 1st Qu.: 4850000              1st Qu.: 5920000              \n Median : 8125000              Median :12575000              \n Mean   :10204097              Mean   :17323914              \n 3rd Qu.:13850000              3rd Qu.:25000000              \n Max.   :41400000              Max.   :84500000              \n                                                             \n idade_media_titular_mandante idade_media_titular_visitante gols_mandante  \n Min.   :23.10                Min.   :20.50                 Min.   :0.000  \n 1st Qu.:26.32                1st Qu.:26.40                 1st Qu.:1.000  \n Median :27.10                Median :27.40                 Median :1.000  \n Mean   :27.02                Mean   :27.37                 Mean   :1.303  \n 3rd Qu.:27.77                3rd Qu.:28.50                 3rd Qu.:2.000  \n Max.   :30.60                Max.   :31.90                 Max.   :5.000  \n                                                            NA's   :1      \n gols_visitante   gols_1_tempo_mandante gols_1_tempo_visitante\n Min.   :0.0000   Min.   :0.0000        Min.   :0.0000        \n 1st Qu.:0.0000   1st Qu.:0.0000        1st Qu.:0.0000        \n Median :1.0000   Median :0.0000        Median :0.0000        \n Mean   :0.9428   Mean   :0.6342        Mean   :0.4228        \n 3rd Qu.:1.0000   3rd Qu.:1.0000        3rd Qu.:1.0000        \n Max.   :4.0000   Max.   :4.0000        Max.   :3.0000        \n NA's   :1                                                    \n\n\n\nRggplot(\n  data = dados_dispersao,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante, color = time_mandante)\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\nQuando os mapeamentos estéticos são definidos dentro de ggplot(), no nível global, eles são passados para todas as camadas geométricas subsequentes do gráfico. No entanto, cada função geométrica no ggplot2 também pode aceitar um argumento mapping, o que permite mapeamentos estéticos locais que são adicionados aos mapeamentos herdados do nível global. Isso oferece uma flexibilidade adicional para controlar a aparência de diferentes partes do gráfico.\nPor exemplo, se quisermos que os pontos sejam coloridos com base em uma variável categórica, mas não desejamos que a linha de tendência também seja separada por essa mesma variável, podemos especificar color = species apenas para geom_point(), mantendo o mapeamento da linha de tendência sem essa separação.\nIsso permitirá que os pontos sejam coloridos de acordo com o time mandante, mas a linha de tendência será calculada com base nos dados completos, sem distinção de time.\n\nRggplot(\n  data = dados_dispersao,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante)\n) +\n  geom_point(mapping = aes(color = time_mandante)) +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\nGeralmente não é uma boa ideia representar informações usando apenas cores em um gráfico, pois as pessoas percebem as cores de maneira diferente devido ao daltonismo ou outras diferenças na visão das cores. Portanto, além da cor, também podemos mapear os times à estética da forma.\n\nRggplot(\n  data = dados_dispersao,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante)\n) +\n  geom_point(mapping = aes(color = time_mandante, shape = time_mandante)) +\n  geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n3.2.3.4 Melhorando as labels e cores\nPodemos refinar o gráfico melhorando as labels e utilizando uma paleta de cores mais adequada. Isso pode ser feito com a função labs() para ajustar os rótulos dos eixos e o título, e usando uma paleta de cores compatível com daltonismo para tornar o gráfico acessível.\n\nRlibrary(scales)\n\n# Definindo as cores dos times\ncores_times &lt;- c(\"Athletico-PR\" = \"#CC0000\",  \n                 \"Coritiba FC\" = \"#006633\",   \n                 \"Paraná\" = \"#0033A0\")       \nggplot(\n  data = dados_dispersao,\n  mapping = aes(x = valor_equipe_titular_mandante, y = idade_media_titular_mandante)\n) +\n  geom_point(mapping = aes(color = time_mandante, shape = time_mandante)) +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Valor do time mandante vs. Idade Média Mandante\",\n    subtitle = \"Relação entre os times Athletico, Coritiba e Paraná\",\n    x = \"Valor do time mandante\", y = \"Idade Média\",\n    color = \"Time Mandante\", shape = \"Time Mandante\"\n  ) +\n  scale_color_manual(values = cores_times) +  \n  scale_x_continuous(labels = label_number(scale_cut = cut_short_scale())) +  \n  theme_minimal()\n\n\n\n\n\n\n\nCom isso, temos um gráfico completo que mostra a relação entre o valor do time mandante e a idade média time mandante, com uma linha de tendência, cores distintas para cada time, e rótulos claros para os eixos e a legenda.\n\nEsse exemplo mostra passo a passo como criar e refinar um gráfico de dispersão usando o ggplot2, aplicando ao seu caso específico de valor do time mandante e idade média time mandante.\n\n3.2.4 O que esse gráfico mostra:\n\nCada ponto no gráfico representa um jogo, com o valor do time mandante plotado no eixo X e a idade média time mandante no eixo Y.\nEsse tipo de gráfico permite identificar qual a tendência do valor do time em relação a idade média dos jogadores.",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Criação de gráficos com o `ggplot2`</span>"
    ]
  },
  {
    "objectID": "03_graphics.html#gráfico-de-setores-pizza",
    "href": "03_graphics.html#gráfico-de-setores-pizza",
    "title": "3  Criação de gráficos com o ggplot2",
    "section": "\n3.3 Gráfico de Setores (Pizza)",
    "text": "3.3 Gráfico de Setores (Pizza)\nO Gráfico de Setores também conhecido como gráfico de pizza, representa com setores circulares a distribuição dos dados entre diferentes categorias. O tamanho da fatia é proporcional à porcentagem dos dados da categoria correspondente entre o total. Pode ser útil quando há poucas categorias e a diferença proporcional é significativa entre uma categoria e outra. Se torna difícil de interpretar quando há um grande número de categorias ou quando as diferenças entre categorias são pouco significativas.\n\n3.3.1 Utilidade\n\n\nComparação de proporções: O gráfico de setores é útil para visualizar como diferentes categorias contribuem para um todo, facilitando a identificação das maiores e menores categorias.\n\nDistribuição visual: Ele também permite ver rapidamente qual categoria tem maior ou menor participação relativa dentro de um conjunto de dados.\n\n3.3.2 Exemplo de Aplicação\nAo gerar um gráfico de setores para representar a participação de público entre diferentes times mandantes, você pode visualizar qual time atraiu o maior número de espectadores ao longo de uma temporada ou campeonato. Isso permite identificar times com grande apelo de público em comparação com outros.\n\n3.3.3 Criando o Gráfico\nO primeiro passo é carregar o conjunto de dados que vai ser utilizado no gráfico e calcular as proporções de cada categoria (neste caso, os times mandantes). Para isso, utilizamos funções que somam os valores do público por time mandante e calculam a proporção em relação ao total. A função ggplot() será utilizada para gerar o gráfico, e a visualização será baseada na função geom_bar() com a transformação coord_polar() para criar o gráfico de pizza.\nAqui está o código para criar o gráfico de setores:\n\nRdados_setores &lt;- dados %&gt;%\n  group_by(time_mandante) %&gt;%\n  summarize(publico_total = sum(publico, na.rm = TRUE)) %&gt;%\n  mutate(proporcao = publico_total / sum(publico_total))  \n\n# Criando o gráfico de setores\nggplot(dados_setores, aes(x = \"\", y = proporcao, fill = time_mandante)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  labs(\n    title = \"Distribuição do Público por Time Mandante\",\n    subtitle = \"Participação relativa dos públicos dos times ao longo da temporada\",\n    fill = \"Time Mandante\"\n  ) +\n  theme_void()  \n\n\n\n\n\n\n\nO gráfico de setores gerado acima exibe a participação de cada time mandante no total de público ao longo do campeonato. A área de cada fatia representa a proporção de público atraída por aquele time. Quanto maior a fatia, maior a participação daquele time no total de público.\n\n3.3.3.1 Melhorando a Visualização com Labels\nPara melhorar a legibilidade do gráfico, podemos adicionar labels (rótulos) que mostrem a proporção exata de cada time diretamente nas fatias do gráfico.\n\nRggplot(dados_setores, aes(x = \"\", y = proporcao, fill = time_mandante)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = scales::percent(proporcao)), position = position_stack(vjust = 0.5)) +\n  labs(\n    title = \"Distribuição do Público por Time Mandante\",\n    subtitle = \"Participação relativa dos públicos dos times ao longo da temporada\",\n    fill = \"Time Mandante\"\n  ) +\n  theme_void()\n\n\n\n\n\n\n\n\n3.3.4 Redução de Dados para Melhoria da Visualização\nQuando trabalhamos com muitos times ou categorias, um gráfico de setores pode se tornar confuso se houver muitas fatias pequenas. Para melhorar a legibilidade, é comum filtrar os dados para focar apenas nas principais categorias (como os 3 times com maior público) ou agrupar categorias menores em uma única fatia representando “Outros”.\n\nRdados_setores_reduzidos &lt;- dados_setores %&gt;%\n  arrange(desc(proporcao)) %&gt;%\n  mutate(time_mandante = ifelse(row_number() &gt; 3, \"Outros\", time_mandante)) %&gt;%\n  group_by(time_mandante) %&gt;%\n  summarize(publico_total = sum(publico_total), proporcao = sum(proporcao))\n\n# Criando o gráfico de setores reduzido\nggplot(dados_setores_reduzidos, aes(x = \"\", y = proporcao, fill = time_mandante)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = scales::percent(proporcao, accuracy = 0.1)), position = position_stack(vjust = 0.5)) +\n  labs(\n    title = \"Distribuição do Público por Time Mandante\",\n    subtitle = \"Os 3 principais times em termos de público\",\n    fill = \"Time Mandante\"\n  ) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_void()\n\n\n\n\n\n\n\nO gráfico de setores é uma excelente ferramenta para visualizar a proporção de categorias dentro de um total. No contexto de público por time mandante, ele nos ajuda a identificar quais times atraíram a maior quantidade de público e qual é a participação relativa de cada um no total. Ao reduzir os dados e focar nas principais categorias, garantimos uma visualização mais limpa e eficiente.\nContudo, é importante ressaltar que o gráfico de setores nem sempre é a melhor opção para a visualização de dados, especialmente quando há muitas categorias ou quando as diferenças entre elas são pequenas. O uso de muitas fatias em um gráfico de setores pode dificultar a interpretação, já que a percepção humana não é precisa ao comparar áreas ou ângulos, tornando difícil identificar pequenas variações entre categorias. Além disso, gráficos de setores não são eficazes para exibir relações ou padrões entre as variáveis, sendo mais úteis em casos onde há poucas categorias com diferenças bem definidas.\nEm cenários com muitas categorias ou quando os dados precisam de uma análise mais detalhada, outros tipos de gráficos, como gráficos de barras ou gráficos de linha, podem fornecer uma melhor representação visual, permitindo comparações mais claras e uma compreensão mais intuitiva dos dados.",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Criação de gráficos com o `ggplot2`</span>"
    ]
  },
  {
    "objectID": "03_graphics.html#histogramas",
    "href": "03_graphics.html#histogramas",
    "title": "3  Criação de gráficos com o ggplot2",
    "section": "\n3.4 Histogramas",
    "text": "3.4 Histogramas\nUma variável é considerada numérica (ou quantitativa) se ela pode assumir uma ampla gama de valores numéricos, sendo possível realizar operações como adição, subtração ou cálculo de médias com esses valores. As variáveis numéricas podem ser contínuas ou discretas.\nUma visualização comumente usada para distribuições de variáveis contínuas é o histograma. O histograma exibe a frequência com que diferentes intervalos de valores (conhecidos como bins) ocorrem em um conjunto de dados. Cada barra do histograma representa a quantidade de dados que se enquadra em um determinado intervalo, com barras mais altas indicando maior ocorrência de valores naquela faixa.\n\n3.4.1 Utilidade\n\n\nVerificação da qualidade dos dados: Histograma ajuda a identificar se há concentrações inesperadas ou valores atípicos (outliers) em certas faixas de dados.\n\nComparação de distribuições entre grupos: Comparar como diferentes grupos (por exemplo, times, rodadas) se distribuem em termos de variáveis como gols ou público.\n\n3.4.2 Exemplo de Aplicação\nAo gerar um histograma para a idade média do time mandante, é possível visualizar a distribuição das faixas etárias, permitindo identificar a frequência dos resultados mais comuns e observar tendências, como se há mais jogadores jovens ou experientes.\n\n3.4.3 Criando o gráfico\nA escolha do tamanho dos bins pode influenciar significativamente a interpretação do gráfico. Bins muito grandes podem esconder detalhes importantes da distribuição, enquanto bins muito pequenos podem criar um gráfico fragmentado e difícil de interpretar. Portanto, é essencial escolher adequadamente o tamanho dos bins para obter uma visualização precisa e útil.\nDesta forma, fazendo uma representação com bins de tamanho variados, temos o seguinte resultado:\n\nRggplot(dados, aes(x = idade_media_titular_mandante)) +\n  geom_histogram(binwidth = 10)\n\n\n\n\n\n\nRggplot(dados, aes(x = idade_media_titular_mandante)) +\n  geom_histogram(binwidth = 5)\n\n\n\n\n\n\nRggplot(dados, aes(x = idade_media_titular_mandante)) +\n  geom_histogram(binwidth = 1)\n\n\n\n\n\n\nRggplot(dados, aes(x = idade_media_titular_mandante)) +\n  geom_histogram(binwidth = 0.1)\n\n\n\n\n\n\n\nAo testar diferentes intervalos, você pode interpretar qual o tamanho de bin mais adequado para sua análise e para uma representação gráfica clara e compreensível.\n\n3.4.3.1 Filtrando os dados para exibir um campeonato específico\nPara esta análise, será tomado como base um ano específico, neste caso, focando o campeonato realizado no ano de 2020:\n\nRhistograma &lt;- dados %&gt;%\n  filter(ano_campeonato == 2020) %&gt;%\n  group_by(time_mandante) %&gt;%\n  summarize(\n    idade_media_titular_mandante = mean(idade_media_titular_mandante, na.rm = TRUE)\n  )\n\nggplot(histograma, aes(x = idade_media_titular_mandante)) +\n  geom_histogram(binwidth = 1, fill = \"blue\", color = \"black\") +\n  labs(title = \"Distribuição das médias de idade dos titulares\", \n       x = \"Média de idade dos titulares\", \n       y = \"Frequência\") +\n  theme_light()\n\n\n\n\n\n\n\n\n3.4.3.2 Comparando a distribuição ao longo dos anos\nAlternativamente, em vez de visualizar para um ano específico, ou apenas o acumulado, podemos gerar em uma mesma visualização o histograma da média de idade para cada ano, utilizando um facets.\n\nRggplot(dados) +\n  geom_histogram(mapping = aes(x = idade_media_titular_mandante),binwidth = 1, fill = \"blue\", color = \"black\") +\n  facet_wrap(~ ano_campeonato)+\n  labs(title = \"Distribuição das médias de idade dos titulares\", \n       x = \"Média de idade dos titulares\", \n       y = \"Frequência\") +\n  theme_bw()\n\n\n\n\n\n\n\nNeste gráfico, cada faceta mostra a distribuição das idades médias dos jogadores mandantes por ano. Barras mais altas indicam maior frequência de jogadores dentro de determinadas faixas etárias. Esse tipo de análise pode ajudar a entender mudanças na composição dos times ao longo das temporadas, como uma tendência de escalar jogadores mais jovens ou mais experientes.",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Criação de gráficos com o `ggplot2`</span>"
    ]
  },
  {
    "objectID": "05_quizz.html",
    "href": "05_quizz.html",
    "title": "5  Quizz",
    "section": "",
    "text": "Tipo de Variavel/Gráfico adequado\nInterpretacao de Dados\nOq esta impróprio no gráfico\nOq mudar no grafico (oq fazer pra corrigir)\nOq falta no código (cores)\nOq falta no código (eixos/título)\nInterpretacao grafico (Gols 45+ e 90+)\nQuestao sobre idade média dos times (ficaram mais velhos, novos, iguais?)\nUma variável representada por números é: sempre numérica?…\nQuestão sobre distribuição do público do time mandante (Com base no gráfico (3.3.4), é correto afirmar:\n\n\nA maior parte do público foram em jogos do Corinthians, São Paulo ou Flamengo\nDentre todos os times do campeonato, o São Paulo foi o time com o menor público\nTodos os jogos tiveram torcida única\nO Flamengo é o time com a maior fatia do público total)",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Quizz</span>"
    ]
  },
  {
    "objectID": "01_visualizacao-dados.html#gráfico-de-densidade-utilizando-o-ggplot",
    "href": "01_visualizacao-dados.html#gráfico-de-densidade-utilizando-o-ggplot",
    "title": "1  Motivação",
    "section": "\n1.4 Gráfico de densidade utilizando o ggplot\n",
    "text": "1.4 Gráfico de densidade utilizando o ggplot\n\n\n\n\n\n\n\n\nFigure 1.5: Comparação entre altura dos personagens femininos e masculinos de Star Wars",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Motivação</span>"
    ]
  },
  {
    "objectID": "03_graphics.html#gráfico-de-barras",
    "href": "03_graphics.html#gráfico-de-barras",
    "title": "3  Criação de gráficos com o ggplot2",
    "section": "\n3.5 Gráfico de Barras",
    "text": "3.5 Gráfico de Barras\nUma variável é categórica se ela só pode assumir um de um pequeno conjunto de valores. Para examinar a distribuição de uma variável categórica, você pode usar um gráfico de barras. A altura das barras exibe quantas observações ocorreram em cada valor da variável categórica.\nO gráfico de barras é formado por barras retangulares, cada barra corresponde a uma categoria e tem comprimento proporcional ao valor que ela representa. As barras podem ser horizontais ou verticais. No caso de barras verticais, o gráfico também costuma ser chamado de gráfico de colunas.\n\n3.5.1 Utilidade\n\n\nComparação entre categorias: O gráfico de barras permite uma comparação direta e fácil de interpretar entre valores de diferentes categorias, permitindo identificar tendências gerais.\n\n3.5.2 Exemplo de Aplicação\nVamos visualizar em um gráfico de barras o total de gols feitos em casa por cada time mandante. Isso nos permitirá identificar quais times tiveram o melhor desempenho jogando como mandante.\n\n3.5.3 Criando o gráfico\nPrimeiro, vamos agrupar os dados por time mandante e calcular a soma dos gols feitos em casa (gols do mandante). Além disso, renomearemos a coluna dos times para “Time” para facilitar o uso nos gráficos.\n\nRgols_barras &lt;- dados %&gt;%\n  group_by(time_mandante) %&gt;%\n  summarise(gols_mandante = sum(gols_mandante, na.rm = TRUE)) %&gt;%\n  rename(Time = time_mandante) %&gt;%\n  arrange(desc(gols_mandante))\n\n\n\n3.5.3.1 Gráfico de barras verticais (colunas)\nNo ggplot, o gráfico de barras verticais é o padrão. Abaixo, criamos um gráfico de colunas simples para mostrar o total de gols feitos em casa por cada time:\n\nRggplot(gols_barras, aes(x = Time, y = gols_mandante)) +\n  geom_bar(stat = \"identity\", fill = \"darkblue\")\n\n\n\n\n\n\n\n\n3.5.3.2 Gráfico de barras horizontais\nQuando o conjunto de dados possuir muitas colunas, o gráfico de barras horizontais pode ser a melhor opção, pois facilita a leitura dos rótulos. Vamos inverter o gráfico com a função coord_flip() e ordenar os times de acordo com o número de gols marcados:\n\nRggplot(gols_barras, aes(x = reorder(Time, gols_mandante), y = gols_mandante)) +\n  geom_bar(stat = \"identity\", fill = \"darkblue\") +\n  coord_flip() +\n  labs(title = \"Total de Gols em Casa por Time\", \n       x = \"Time\", \n       y = \"Total de Gols em Casa\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n3.5.3.2.1 Adicionando rótulo de dados\nAgora, vamos adicionar o rótulos de dados diretamente nas barras, o que permite visualizar o valor exato de gols para cada time sem precisar deduzir o valor aproximado observando a altura da barra.\n\nRggplot(gols_barras, aes(x = reorder(Time, gols_mandante), y = gols_mandante)) +\n  geom_bar(stat = \"identity\", fill = \"darkblue\") +\n  geom_text(aes(label = gols_mandante), hjust = -0.1) + \n  coord_flip() +\n  labs(title = \"Total de Gols em Casa por Time\", \n       x = \"Time\", \n       y = \"Total de Gols em Casa\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n3.5.3.3 EXERCÍCIO Gráfico de Barras - Gols Fora de Casa\nAgora podemos repetir o processo, mas desta vez para os gols feitos fora de casa por cada time visitante.",
    "crumbs": [
      "Visualização de Dados",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Criação de gráficos com o `ggplot2`</span>"
    ]
  }
]